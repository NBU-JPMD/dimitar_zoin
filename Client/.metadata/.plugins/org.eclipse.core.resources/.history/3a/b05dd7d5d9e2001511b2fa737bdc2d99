import java.io.FileInputStream;
import java.io.FileNotFoundException;
import java.io.IOException;
import java.nio.*;
import java.nio.channels.Channel;
import java.nio.channels.FileChannel;
import java.nio.channels.SelectionKey;
import java.nio.channels.Selector;
import java.nio.channels.ServerSocketChannel;
import java.nio.channels.SocketChannel;
import java.util.Iterator;
import java.util.Set;

public class Server {

	public static void main(String[] args) throws FileNotFoundException {
		ServerSocketChannel servSoCh = ServerSocketChannel.open();
		ByteBuffer buf = ByteBuffer.allocate(1024);
		
		Selector selector = Selector.open();

		servSoCh.configureBlocking(false);

		SelectionKey key = servSoCh.register(selector, SelectionKey.OP_READ);


		while(true) {

		  int readyChannels = selector.select();

		  if(readyChannels == 0) continue;


		  Set<SelectionKey> selectedKeys = selector.selectedKeys();

		  Iterator<SelectionKey> keyIterator = selectedKeys.iterator();

		  while(keyIterator.hasNext()) {

		    SelectionKey key = keyIterator.next();

		    if(key.isAcceptable()) {
		    	 SocketChannel client = servSoCh.accept();
		    	 client.configureBlocking(false);
		    	 client.register(selector, SelectionKey.OP_READ);

		    } else if (key.isConnectable()) {
		        // a connection was established with a remote server.

		    } else if (key.isReadable()) {
		        // a channel is ready for reading

		    } else if (key.isWritable()) {
		        // a channel is ready for writing
		    }

		    keyIterator.remove();
		  }
		}
	}

}
